{"ast":null,"code":"var _jsxFileName = \"/Users/estivensalazar/Desktop/Code/GQL_Soccer_Teams/client/src/components/PlayerTable/PlayerTable.js\";\n//importing dependencies\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getTeamQuery } from \"../../Queries/queries.js\";\n\nclass PlayerTable extends Component {\n  displayPlayerDetails() {\n    const teamId = this.props.teamId;\n    const team = this.props.data.team; // if/else statement used to render data if team is selected, else ... return 'no team selected'\n\n    if (teamId) {\n      return console.log(team);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"No Team Selected...\");\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.displayPlayerDetails());\n  }\n\n} // here we pass the 'book's ID' from the props as an argument into the options\n// parameter of the getBookQuery in order to isolate the single book that was selected\n\n\nexport default graphql(getTeamQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.teamId\n      }\n    };\n  }\n})(PlayerTable);","map":{"version":3,"sources":["/Users/estivensalazar/Desktop/Code/GQL_Soccer_Teams/client/src/components/PlayerTable/PlayerTable.js"],"names":["React","Component","graphql","getTeamQuery","PlayerTable","displayPlayerDetails","teamId","props","team","data","console","log","render","options","variables","id"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACnCI,EAAAA,oBAAoB,GAAG;AAAA,UACdC,MADc,GACH,KAAKC,KADF,CACdD,MADc;AAAA,UAEdE,IAFc,GAEL,KAAKD,KAAL,CAAWE,IAFN,CAEdD,IAFc,EAItB;;AACA,QAAIF,MAAJ,EAAY;AACX,aAAOI,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAAP;AACA,KAFD,MAEO;AACN,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACA;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACRF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKF,oBAAL,EAAN,CAAP;AACA;;AAjBkC,C,CAoBpC;AACA;;;AACA,eAAeH,OAAO,CAACC,YAAD,EAAe;AACpCU,EAAAA,OAAO,EAAEN,KAAK,IAAI;AACjB,WAAO;AACNO,MAAAA,SAAS,EAAE;AACVC,QAAAA,EAAE,EAAER,KAAK,CAACD;AADA;AADL,KAAP;AAKA;AAPmC,CAAf,CAAP,CAQZF,WARY,CAAf","sourcesContent":["//importing dependencies\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getTeamQuery } from \"../../Queries/queries.js\";\n\nclass PlayerTable extends Component {\n\tdisplayPlayerDetails() {\n\t\tconst { teamId } = this.props;\n\t\tconst { team } = this.props.data;\n\n\t\t// if/else statement used to render data if team is selected, else ... return 'no team selected'\n\t\tif (teamId) {\n\t\t\treturn console.log(team);\n\t\t} else {\n\t\t\treturn <div>No Team Selected...</div>;\n\t\t}\n\t}\n\n\trender() {\n\t\tconsole.log(this.props);\n\n\t\treturn <div>{this.displayPlayerDetails()}</div>;\n\t}\n}\n\n// here we pass the 'book's ID' from the props as an argument into the options\n// parameter of the getBookQuery in order to isolate the single book that was selected\nexport default graphql(getTeamQuery, {\n\toptions: props => {\n\t\treturn {\n\t\t\tvariables: {\n\t\t\t\tid: props.teamId\n\t\t\t}\n\t\t};\n\t}\n})(PlayerTable);\n"]},"metadata":{},"sourceType":"module"}