{"ast":null,"code":"var _jsxFileName = \"/Users/estivensalazar/Desktop/Code/GQL_Soccer_Teams/client/src/components/TeamTable/TeamTable.js\";\n// importing dependencies\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getTeamsQuery } from \"../../Queries/queries\";\nimport { Table } from \"reactstrap\"; // importing components\n\nimport PlayerTable from \"../PlayerTable/PlayerTable\";\nimport Loading from \"../Loading/Loading\";\n\nclass TeamTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: \"5e2d349f5ff0c21b4ab22c07\"\n    };\n  } // function used to grab data, and display accordingly\n\n\n  displayTeams() {\n    let data = this.props.data;\n\n    if (data.loading) {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Loading Teams...\"));\n    } else {\n      return data.teams.map(team => {\n        return React.createElement(\"tr\", {\n          key: team.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: team.logo,\n          className: \"logo-image\",\n          alt: \"\".concat(team.name, \"-logo\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, team.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, team.venue_name), React.createElement(\"td\", {\n          onClick: e => {\n            this.setState({\n              selected: team.id\n            });\n          },\n          className: \"more-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"View Players\"));\n      });\n    }\n  }\n\n  renderPage() {\n    if (this.props.data.loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Table, {\n        dark: true,\n        bordered: true,\n        id: \"team-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Logo\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Venue Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"More Details\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.displayTeams())), React.createElement(PlayerTable, {\n        teamId: this.state.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.renderPage());\n  }\n\n}\n\nexport default graphql(getTeamsQuery)(TeamTable);","map":{"version":3,"sources":["/Users/estivensalazar/Desktop/Code/GQL_Soccer_Teams/client/src/components/TeamTable/TeamTable.js"],"names":["React","Component","graphql","getTeamsQuery","Table","PlayerTable","Loading","TeamTable","constructor","props","state","selected","displayTeams","data","loading","teams","map","team","id","logo","name","venue_name","e","setState","renderPage","render","console","log"],"mappings":"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","sourcesContent":["// importing dependencies\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getTeamsQuery } from \"../../Queries/queries\";\nimport { Table } from \"reactstrap\";\n\n// importing components\nimport PlayerTable from \"../PlayerTable/PlayerTable\";\nimport Loading from \"../Loading/Loading\";\n\nclass TeamTable extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselected: \"5e2d349f5ff0c21b4ab22c07\"\n\t\t};\n\t}\n\n\t// function used to grab data, and display accordingly\n\tdisplayTeams() {\n\t\tlet data = this.props.data;\n\n\t\tif (data.loading) {\n\t\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t<td>Loading Teams...</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t} else {\n\t\t\treturn data.teams.map(team => {\n\t\t\t\treturn (\n\t\t\t\t\t<tr key={team.id}>\n\t\t\t\t\t\t<th scope=\"row\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={team.logo}\n\t\t\t\t\t\t\t\tclassName=\"logo-image\"\n\t\t\t\t\t\t\t\talt={`${team.name}-logo`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>{team.name}</td>\n\t\t\t\t\t\t<td>{team.venue_name}</td>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselected:\n\t\t\t\t\t\t\t\t\t\tteam.id\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName=\"more-details\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tView Players\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n\n\trenderPage() {\n\t\tif (this.props.data.loading) {\n\t\t\treturn <Loading />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Table dark bordered id=\"team-table\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Logo</th>\n\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\tVenue\n\t\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\tMore\n\t\t\t\t\t\t\t\t\tDetails\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{this.displayTeams()}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t\t<PlayerTable\n\t\t\t\t\t\tteamId={this.state.selected}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\tconsole.log(this.props);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* <Table dark bordered id=\"team-table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Logo</th>\n\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t<th>Venue Name</th>\n\t\t\t\t\t\t\t<th>More Details</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>{this.displayTeams()}</tbody>\n\t\t\t\t</Table>\n\t\t\t\t<PlayerTable teamId={this.state.selected} /> */}\n\t\t\t\t{this.renderPage()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default graphql(getTeamsQuery)(TeamTable);\n"]},"metadata":{},"sourceType":"module"}