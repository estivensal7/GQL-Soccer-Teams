{"ast":null,"code":"var _jsxFileName = \"/Users/estivensalazar/Desktop/Code/GQL_Soccer_Teams/client/src/components/PlayerTable/PlayerTable.js\";\n//importing dependencies\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getPlayersQuery } from \"../../Queries/queries.js\";\n\nclass PlayerTable extends Component {\n  displayPlayerDetails() {\n    const team = this.props.data.team; // if/else statement used to render data if team is selected, else ... return 'no team selected'\n\n    if (team) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, book.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, book.genre), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, book.author.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"All books by this author:\"), React.createElement(\"ul\", {\n        className: \"other-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, book.author.books.map(item => {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, item.name);\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"No Team Selected...\");\n    }\n  }\n\n  render() {\n    console.log(this.props); // return <div id=\"book-details\">{this.displayBookDetails()}</div>;\n  }\n\n} // here we pass the 'book's ID' from the props as an argument into the options\n// parameter of the getBookQuery in order to isolate the single book that was selected\n\n\nexport default graphql(getPlayersQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.team_id\n      }\n    };\n  }\n})(PlayerTable);","map":{"version":3,"sources":["/Users/estivensalazar/Desktop/Code/GQL_Soccer_Teams/client/src/components/PlayerTable/PlayerTable.js"],"names":["React","Component","graphql","getPlayersQuery","PlayerTable","displayPlayerDetails","team","props","data","book","name","genre","author","books","map","item","id","render","console","log","options","variables","team_id"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,eAAT,QAAgC,0BAAhC;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACnCI,EAAAA,oBAAoB,GAAG;AAAA,UACdC,IADc,GACL,KAAKC,KAAL,CAAWC,IADN,CACdF,IADc,EAGtB;;AACA,QAAIA,IAAJ,EAAU;AACT,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKG,IAAI,CAACC,IAAV,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,IAAI,CAACE,KAAT,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIF,IAAI,CAACG,MAAL,CAAYF,IAAhB,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAJD,EAKC;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACED,IAAI,CAACG,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsBC,IAAI,IAAI;AAC9B,eACC;AACC,UAAA,GAAG,EACFA,IAAI,CAACC,EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMED,IAAI,CAACL,IANP,CADD;AAWA,OAZA,CADF,CALD,CADD;AAuBA,KAxBD,MAwBO;AACN,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACA;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB,EADQ,CAGR;AACA;;AAtCkC,C,CAyCpC;AACA;;;AACA,eAAeL,OAAO,CAACC,eAAD,EAAkB;AACvCiB,EAAAA,OAAO,EAAEb,KAAK,IAAI;AACjB,WAAO;AACNc,MAAAA,SAAS,EAAE;AACVL,QAAAA,EAAE,EAAET,KAAK,CAACe;AADA;AADL,KAAP;AAKA;AAPsC,CAAlB,CAAP,CAQZlB,WARY,CAAf","sourcesContent":["//importing dependencies\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getPlayersQuery } from \"../../Queries/queries.js\";\n\nclass PlayerTable extends Component {\n\tdisplayPlayerDetails() {\n\t\tconst { team } = this.props.data;\n\n\t\t// if/else statement used to render data if team is selected, else ... return 'no team selected'\n\t\tif (team) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>{book.name}</h2>\n\t\t\t\t\t<p>{book.genre}</p>\n\t\t\t\t\t<p>{book.author.name}</p>\n\t\t\t\t\t<p>All books by this author:</p>\n\t\t\t\t\t<ul className=\"other-books\">\n\t\t\t\t\t\t{book.author.books.map(item => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\tkey={\n\t\t\t\t\t\t\t\t\t\titem.id\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\titem.name\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <div>No Team Selected...</div>;\n\t\t}\n\t}\n\n\trender() {\n\t\tconsole.log(this.props);\n\n\t\t// return <div id=\"book-details\">{this.displayBookDetails()}</div>;\n\t}\n}\n\n// here we pass the 'book's ID' from the props as an argument into the options\n// parameter of the getBookQuery in order to isolate the single book that was selected\nexport default graphql(getPlayersQuery, {\n\toptions: props => {\n\t\treturn {\n\t\t\tvariables: {\n\t\t\t\tid: props.team_id\n\t\t\t}\n\t\t};\n\t}\n})(PlayerTable);\n"]},"metadata":{},"sourceType":"module"}