{"ast":null,"code":"var _jsxFileName = \"/Users/estivensalazar/Desktop/Code/GraphQL_Async_App/client/src/components/BookDetails/BookDetails.js\";\n//importing dependencies\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getBookQuery } from \"../../Queries/queries.js\";\n\nclass BookDetails extends Component {\n  displayBookDetails() {\n    const book = this.props.data.book; // if/else statement used to render data if book is selected, else ... return 'no book selected'\n\n    if (book) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, book.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, book.genre), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, book.author.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"All books by this author:\"), React.createElement(\"ul\", {\n        className: \"other-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, book.author.books.map(item => {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, item.name);\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"No Book Selected...\");\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      id: \"book-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.displayBookDetails());\n  }\n\n}\n\nexport default graphql(getBookQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["/Users/estivensalazar/Desktop/Code/GraphQL_Async_App/client/src/components/BookDetails/BookDetails.js"],"names":["React","Component","graphql","getBookQuery","BookDetails","displayBookDetails","book","props","data","name","genre","author","books","map","item","id","render","console","log","options","variables","bookId"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACnCI,EAAAA,kBAAkB,GAAG;AAAA,UACZC,IADY,GACH,KAAKC,KAAL,CAAWC,IADR,CACZF,IADY,EAGpB;;AACA,QAAIA,IAAJ,EAAU;AACT,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACG,IAAV,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,IAAI,CAACI,KAAT,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,IAAI,CAACK,MAAL,CAAYF,IAAhB,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAJD,EAKC;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEH,IAAI,CAACK,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsBC,IAAI,IAAI;AAC9B,eACC;AACC,UAAA,GAAG,EACFA,IAAI,CAACC,EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMED,IAAI,CAACL,IANP,CADD;AAWA,OAZA,CADF,CALD,CADD;AAuBA,KAxBD,MAwBO;AACN,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACA;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AAEA,WAAO;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKF,kBAAL,EAAxB,CAAP;AACA;;AAtCkC;;AAyCpC,eAAeH,OAAO,CAACC,YAAD,EAAe;AACpCgB,EAAAA,OAAO,EAAEZ,KAAK,IAAI;AACjB,WAAO;AACNa,MAAAA,SAAS,EAAE;AACVL,QAAAA,EAAE,EAAER,KAAK,CAACc;AADA;AADL,KAAP;AAKA;AAPmC,CAAf,CAAP,CAQZjB,WARY,CAAf","sourcesContent":["//importing dependencies\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getBookQuery } from \"../../Queries/queries.js\";\n\nclass BookDetails extends Component {\n\tdisplayBookDetails() {\n\t\tconst { book } = this.props.data;\n\n\t\t// if/else statement used to render data if book is selected, else ... return 'no book selected'\n\t\tif (book) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>{book.name}</h2>\n\t\t\t\t\t<p>{book.genre}</p>\n\t\t\t\t\t<p>{book.author.name}</p>\n\t\t\t\t\t<p>All books by this author:</p>\n\t\t\t\t\t<ul className=\"other-books\">\n\t\t\t\t\t\t{book.author.books.map(item => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\tkey={\n\t\t\t\t\t\t\t\t\t\titem.id\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\titem.name\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <div>No Book Selected...</div>;\n\t\t}\n\t}\n\n\trender() {\n\t\tconsole.log(this.props);\n\n\t\treturn <div id=\"book-details\">{this.displayBookDetails()}</div>;\n\t}\n}\n\nexport default graphql(getBookQuery, {\n\toptions: props => {\n\t\treturn {\n\t\t\tvariables: {\n\t\t\t\tid: props.bookId\n\t\t\t}\n\t\t};\n\t}\n})(BookDetails);\n"]},"metadata":{},"sourceType":"module"}