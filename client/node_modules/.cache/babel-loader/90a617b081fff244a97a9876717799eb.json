{"ast":null,"code":"var _jsxFileName = \"/Users/estivensalazar/Desktop/Code/GQL_Soccer_Teams/client/src/components/PlayerTable/PlayerTable.js\";\n//importing dependencies\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getTeamQuery } from \"../../Queries/queries.js\";\nimport { Table } from \"reactstrap\";\n\nclass PlayerTable extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.updateTeamInfoState = props => {\n      if (props.data.team) {\n        this.setState({\n          teamInfo: props.data.team\n        });\n      }\n    };\n\n    this.state = {\n      teamInfo: {}\n    };\n  }\n\n  displayPlayerDetails() {\n    const team = this.props.data.team; // if/else statement used to render data if team is selected, else ... return 'no team selected'\n\n    if (team) {\n      const players = team.players;\n      return players.map(player => {\n        return React.createElement(\"tr\", {\n          key: player.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, player.player_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, player.position), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, player.age));\n      });\n    } else {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Loading Players...\"));\n    }\n  }\n\n  componentDidMount(props) {\n    this.updateTeamInfoState(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"player-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Table, {\n      dark: true,\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Position\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Age\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.displayPlayerDetails())));\n  }\n\n} // here we pass the 'book's ID' from the props as an argument into the options\n// parameter of the getBookQuery in order to isolate the single book that was selected\n\n\nexport default graphql(getTeamQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.teamId\n      }\n    };\n  }\n})(PlayerTable);","map":{"version":3,"sources":["/Users/estivensalazar/Desktop/Code/GQL_Soccer_Teams/client/src/components/PlayerTable/PlayerTable.js"],"names":["React","Component","graphql","getTeamQuery","Table","PlayerTable","constructor","props","updateTeamInfoState","data","team","setState","teamInfo","state","displayPlayerDetails","players","map","player","id","player_name","position","age","componentDidMount","render","options","variables","teamId"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AACnCK,EAAAA,WAAW,CAACC,MAAD,EAAQ;AAClB,UAAMA,MAAN;;AADkB,SAOnBC,mBAPmB,GAOGD,KAAK,IAAI;AAC9B,UAAIA,KAAK,CAACE,IAAN,CAAWC,IAAf,EAAqB;AACpB,aAAKC,QAAL,CAAc;AACbC,UAAAA,QAAQ,EAAEL,KAAK,CAACE,IAAN,CAAWC;AADR,SAAd;AAGA;AACD,KAbkB;;AAElB,SAAKG,KAAL,GAAa;AACZD,MAAAA,QAAQ,EAAE;AADE,KAAb;AAGA;;AAUDE,EAAAA,oBAAoB,GAAG;AACtB,UAAMJ,IAAI,GAAG,KAAKH,KAAL,CAAWE,IAAX,CAAgBC,IAA7B,CADsB,CAGtB;;AACA,QAAIA,IAAJ,EAAU;AACT,YAAMK,OAAO,GAAGL,IAAI,CAACK,OAArB;AAEA,aAAOA,OAAO,CAACC,GAAR,CAAYC,MAAM,IAAI;AAC5B,eACC;AAAI,UAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,MAAM,CAACE,WAAZ,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,MAAM,CAACG,QAAZ,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,MAAM,CAACI,GAAZ,CAHD,CADD;AAOA,OARM,CAAP;AASA,KAZD,MAYO;AACN,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADD,CADD;AAKA;AACD;;AAEDC,EAAAA,iBAAiB,CAACf,KAAD,EAAQ;AACxB,SAAKC,mBAAL,CAAyBD,KAAzB;AACA;;AAEDgB,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,MAAX;AAAY,MAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHD,CADD,CADD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKT,oBAAL,EADF,CARD,CAFD,CADD;AAiBA;;AA/DkC,C,CAkEpC;AACA;;;AACA,eAAeZ,OAAO,CAACC,YAAD,EAAe;AACpCqB,EAAAA,OAAO,EAAEjB,KAAK,IAAI;AACjB,WAAO;AACNkB,MAAAA,SAAS,EAAE;AACVP,QAAAA,EAAE,EAAEX,KAAK,CAACmB;AADA;AADL,KAAP;AAKA;AAPmC,CAAf,CAAP,CAQZrB,WARY,CAAf","sourcesContent":["//importing dependencies\nimport React, { Component } from \"react\";\nimport { graphql } from \"react-apollo\";\nimport { getTeamQuery } from \"../../Queries/queries.js\";\nimport { Table } from \"reactstrap\";\n\nclass PlayerTable extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tteamInfo: {}\n\t\t};\n\t}\n\n\tupdateTeamInfoState = props => {\n\t\tif (props.data.team) {\n\t\t\tthis.setState({\n\t\t\t\tteamInfo: props.data.team\n\t\t\t});\n\t\t}\n\t};\n\n\tdisplayPlayerDetails() {\n\t\tconst team = this.props.data.team;\n\n\t\t// if/else statement used to render data if team is selected, else ... return 'no team selected'\n\t\tif (team) {\n\t\t\tconst players = team.players;\n\n\t\t\treturn players.map(player => {\n\t\t\t\treturn (\n\t\t\t\t\t<tr key={player.id}>\n\t\t\t\t\t\t<td>{player.player_name}</td>\n\t\t\t\t\t\t<td>{player.position}</td>\n\t\t\t\t\t\t<td>{player.age}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t<td>Loading Players...</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentDidMount(props) {\n\t\tthis.updateTeamInfoState(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"player-details\">\n\t\t\t\t{/* <img src={} */}\n\t\t\t\t<Table dark bordered>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t<th>Position</th>\n\t\t\t\t\t\t\t<th>Age</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{this.displayPlayerDetails()}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// here we pass the 'book's ID' from the props as an argument into the options\n// parameter of the getBookQuery in order to isolate the single book that was selected\nexport default graphql(getTeamQuery, {\n\toptions: props => {\n\t\treturn {\n\t\t\tvariables: {\n\t\t\t\tid: props.teamId\n\t\t\t}\n\t\t};\n\t}\n})(PlayerTable);\n"]},"metadata":{},"sourceType":"module"}